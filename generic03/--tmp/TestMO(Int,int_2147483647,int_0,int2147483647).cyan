package generic03


object TestMO<Int, int_2147483647, int_0, int2147483647> 

    func run  {
        let rs =         @symbolToString("Int") ; 
        let ss =         @symbolToString("int_2147483647") ; 
        let ts =         @symbolToString("int_0") ; 
        let us =         @symbolToString("int2147483647") ; 
        assert rs == "Int" && ss == "int_2147483647" &&
               ts == "int_0" && us == "int2147483647";
        ; 
        let sv =         @extract("int_2147483647") ; 
        let tv =         @extract("int_0") ; 
        let uv =         @extract("int2147483647") ; 
        assert sv == 2147483647 && tv == 0 && uv == 2147483647;


        ; 
        let f = { (: Char ch :)             let g = { (: Int n :)                 let rs0 =                 @symbolToString("Int") ; 
                let ss0 =                 @symbolToString("int_2147483647") ; 
                let ts0 =                 @symbolToString("int_0") ; 
                let us0 =                 @symbolToString("int2147483647") ; 
                assert rs0 == "Int" && ss0 == "int_2147483647" &&
                       ts0 == "int_0" && us0 == "int2147483647";
                ; 
                let sv0 =                 @extract("int_2147483647") ; 
                let tv0 =                 @extract("int_0") ; 
                let uv0 =                 @extract("int2147483647") ; 
                assert sv0 == 2147483647 && tv0 == 0 && uv0 == 2147483647;
                
 }; 
            g eval: 0; 
            assert ch == 'a';
            
 }; 
        f eval: 'a'
    } 


end

