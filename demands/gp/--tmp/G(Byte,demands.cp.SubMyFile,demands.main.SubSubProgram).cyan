package demands.gp
import demands.cp
import demands.main

@concept{*
    Byte in [ Int, Short, Byte, Char, Long ],  "The first parameter, 'Byte', should be Int, Short, Byte, Char, or Long",
    demands.cp.SubMyFile implements Openable,  "The second parameter, 'demands.cp.SubMyFile', should implement interface Openable",
    demands.main.SubSubProgram subprototype Program,      "The third parameter, 'demands.main.SubSubProgram', should be subtype of Program"
*}
 
object G<Byte, demands.cp.SubMyFile, demands.main.SubSubProgram> 

    func test  {
        let Interval<Byte> r = Interval<Byte>(Byte, Byte); 
        let demands.cp.SubMyFile s = demands.cp.SubMyFile; 
        s open; 
        let Program p = demands.main.SubSubProgram
    } 


end

